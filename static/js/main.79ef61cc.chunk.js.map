{"version":3,"sources":["games/brickpong/acsat.png","games/brickpong/BallMovement.js","data.js","games/brickpong/Brick.js","games/brickpong/util/BrickCollision.js","games/brickpong/util/ResetBall.js","games/brickpong/Board.js","games/brickpong/PlayerStats.js","games/brickpong/util/AllBroke.js","games/brickpong/util/WallCollision.js","games/brickpong/Paddle.js","games/brickpong/util/PaddleHit.js","games/brickpong/index.js","App.js","index.js"],"names":["module","exports","Ball","x","y","rad","this","ctx","beginPath","fillStyle","arc","Math","PI","strokeStyle","lineWidth","fill","stroke","ballObj","dx","dy","speed","brickObj","height","density","colors","player","name","prompt","lives","score","level","paddleProps","width","color","SingleBrick","w","h","c","broke","rect","strokeRect","BrickCollision","circle","distX","abs","distY","hit","axis","ResetBall","canvas","console","log","random","bricks","data","Board","canvasRef","useRef","useEffect","render","current","getContext","brickCollision","newBrickSet","brick","newbricks","length","i","newBrick","push","Brick","clearRect","font","fillText","gap","PlayerStats","map","draw","BallMovement","total","AllBroken","alert","setLives","WallCollision","shadowBlur","shadowColor","move","Paddle","collidePoint","angle","sin","cos","PaddleHit","requestAnimationFrame","style","textAlign","src","acsat","alt","className","id","ref","onMouseMove","event","clientX","window","innerWidth","Brickpong","App","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79ef61cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/acsat.f14a7a50.png\";","export function BallMovement(ctx, ballObj) {\n  let data = new Ball(ballObj.x, ballObj.y, ballObj.rad);\n  data.draw(ctx);\n  ballObj.x += ballObj.dx;\n  ballObj.y += ballObj.dy;\n}\n\nclass Ball {\n  constructor(x, y, rad) {\n    this.x = x;\n    this.y = y;\n    this.rad = rad;\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.fillStyle = \"red\";\n    ctx.arc(this.x, this.y, this.rad, 0, 2 * Math.PI);\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 2;\n    ctx.fill();\n    ctx.stroke();\n  }\n}\n","const enteredName = prompt('Please enter your name');\nexport default {\n  ballObj: {\n    x: 20,\n    y: 200,\n    dx: 5,\n    dy: 5,\n    rad: 10,\n    speed: 7,\n  },\n  brickObj: {\n    x: 0.5,\n    y: 50,\n    height: 20,\n    density: 2,\n    colors: [\"red\", \"violet\"],\n  },\n  player: {\n    name: enteredName,\n    lives: 5,\n    score: 0,\n    level: 1,\n  },\n  paddleProps: {\n    height: 20,\n    width: 100,\n    x: 100,\n    color: \"orange\",\n  },\n  \n};\n\n\n","export default function Brick(level, bricks, canvas, brick) {\n  brick.width = canvas.width / 5 - 1;\n  let newbricks = [];\n  if (!bricks) {\n    return [];\n  }\n  // If all the levels are filled\n  if (bricks.length >= 5 * level) {\n    return;\n  }\n\n  // Brick Formation here\n  for (let i = 0; i < 5 * level; i++) {\n    let newBrick = new SingleBrick(\n      brick.x + brick.width,\n      brick.y,\n      brick.width,\n      brick.height,\n      brick.colors\n    );\n    newbricks.push(newBrick);\n    // newBrick.draw();\n    brick.x += brick.width + 1;\n    if (brick.x + brick.width >= canvas.width) {\n      brick.x = 0.5;\n      brick.y += brick.height + 1;\n    }\n  }\n  return newbricks;\n}\n\nclass SingleBrick {\n  constructor(x, y, w, h, c) {\n    this.x = x - w;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n    this.colors = c;\n    this.broke = false;\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.width, this.height);\n    ctx.fillStyle = this.broke ? \"rgba(19, 73, 89, 0)\" : this.colors[1];\n\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = this.broke ? \"rgba(19, 73, 89, 0)\" : \"transparent\";\n    // ctx.globalCompositeOperation = \"destination-atop\";\n    // ctx.shadowBlur = 0;\n    // ctx.shadowColor = \"blue\";\n    ctx.fill();\n    ctx.strokeRect(this.x, this.y, this.width, this.height);\n  }\n}\n","export default function BrickCollision(circle, rect) {\n  var distX = Math.abs(circle.x - rect.x - rect.width / 2);\n  var distY = Math.abs(circle.y - rect.y - rect.height / 2);\n\n  if (distX > rect.width / 2 + circle.rad) {\n    // return false;\n    return {\n      hit: false,\n    };\n  }\n  if (distY > rect.height / 2 + circle.rad) {\n    // return false;\n    return {\n      hit: false,\n    };\n  }\n\n  if (distX <= rect.width / 2) {\n    // return true;\n    return {\n      hit: true,\n      axis: \"Y\",\n    };\n  }\n  if (distY <= rect.height / 2) {\n    // return true;\n    return {\n      hit: true,\n      axis: \"X\",\n    };\n  }\n\n  // also test for corner collisions\n  var dx = distX - rect.width / 2;\n  var dy = distY - rect.height / 2;\n  // return dx * dx + dy * dy <= circle.rad * circle.rad;\n  return {\n    hit: dx * dx + dy * dy <= circle.rad * circle.rad,\n    axis: \"X\",\n  };\n}\n","// RESET THE BALL\nexport default function ResetBall(ballObj, canvas, paddleProps) {\n  console.log(ballObj);\n  console.log(paddleProps);\n  ballObj.x = paddleProps.x;\n  ballObj.y = paddleProps.y - 80;\n  ballObj.dx = 6 * (Math.random() * 2 - 1);\n  ballObj.dy = -6;\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { BallMovement } from \"./BallMovement\";\nimport data from \"../../data\";\nimport WallCollision from \"./util/WallCollision\";\nimport Paddle from \"./Paddle\";\nimport Brick from \"./Brick\";\nimport BrickCollision from \"./util/BrickCollision\";\nimport PaddleHit from \"./util/PaddleHit\";\nimport PlayerStats from \"./PlayerStats\";\nimport AllBroken from \"./util/AllBroke\";\nimport ResetBall from \"./util/ResetBall\";\nimport acsat from \"./acsat.png\";\n\nlet bricks = [];\nlet { ballObj, paddleProps, brickObj, player } = data;\nexport default function Board() {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const render = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      paddleProps.y = canvas.height - 30;\n\n      // Assign Bricks\n      let newBrickSet = Brick(player.level, bricks, canvas, brickObj);\n\n      if (newBrickSet && newBrickSet.length > 0) {\n        bricks = newBrickSet;\n      }\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      PlayerStats(ctx, player, canvas);\n\n      // Display Bricks\n      bricks.map((brick) => {\n        return brick.draw(ctx);\n      });\n\n      // Handle Ball Movement\n      BallMovement(ctx, ballObj);\n\n      // Check all broken\n      AllBroken(bricks, player, canvas, ballObj);\n\n      if (player.lives === 0) {\n        alert(\"Game Over! Press ok to restart\");\n\n        player.lives = 5;\n        player.level = 1;\n        player.score = 0;\n        ResetBall(ballObj, canvas, paddleProps);\n        bricks.length = 0;\n      }\n      // Ball and Wall Collision\n      WallCollision(ballObj, canvas, player, paddleProps);\n\n      // Brick Collision\n      let brickCollision;\n\n      for (let i = 0; i < bricks.length; i++) {\n        brickCollision = BrickCollision(ballObj, bricks[i]);\n\n        if (brickCollision.hit && !bricks[i].broke) {\n          // console.log(brickCollision);\n          if (brickCollision.axis === \"X\") {\n            ballObj.dx *= -1;\n            bricks[i].broke = true;\n          } else if (brickCollision.axis === \"Y\") {\n            ballObj.dy *= -1;\n            bricks[i].broke = true;\n          }\n          player.score += 10;\n        }\n      }\n      Paddle(ctx, canvas, paddleProps);\n\n      // Paddle + Ball Collision\n      PaddleHit(ballObj, paddleProps);\n\n      requestAnimationFrame(render);\n    };\n    render();\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <img src={acsat} alt=\"AC logo\" width=\"423\" height=\"235\"></img>\n      <h1 className=\"gameHeader\">BRICK PONG</h1>\n      <canvas\n        id=\"canvas\"\n        ref={canvasRef}\n        onMouseMove={(event) =>\n          (paddleProps.x =\n            event.clientX -\n            (window.innerWidth < 900 ? 10 : (window.innerWidth * 20) / 200) -\n            paddleProps.width / 2 -\n            10)\n        }\n        height=\"500\"\n        width={\n          window.innerWidth < 900\n            ? window.innerWidth - 20\n            : window.innerWidth - (window.innerWidth * 20) / 100\n        }\n      />\n    </div>\n  );\n}\n","export default function PlayerStats(ctx, player, canvas) {\n  // Name\n  ctx.font = \"30px stripped\";\n  ctx.fillStyle = \"white\";\n  ctx.fillText(`Name: ${player.name}`, 20, 30);\n\n  // Lives\n  ctx.font = \"30px stripped\";\n  ctx.fillStyle = \"red\";\n  let gap = 0;\n  for (let i = 0; i < player.lives; i++) {\n    ctx.fillText(\"❤️\", canvas.width / 2 + gap, 30);\n    gap += 30;\n  }\n\n  // Score\n  ctx.font = \"30px stripped\";\n  ctx.fillStyle = \"white\";\n  ctx.fillText(`Score: ${player.score}`, canvas.width - 140, 30);\n}\n","import data from \"../../../data\";\nimport ResetBall from \"./ResetBall\";\nexport default function AllBroken(bricks, player, canvas, ballObj) {\n  let { brickObj, paddleProps } = data;\n  //   if (bricks.length === 0) {\n  //     return;\n  //   }\n  let total = 0;\n  for (let i = 0; i < bricks.length; i++) {\n    if (bricks[i].broke === true) {\n      total++;\n    }\n  }\n  if (total === bricks.length) {\n    player.level++;\n    ResetBall(ballObj, canvas, paddleProps);\n    brickObj.y = 50;\n  }\n}\n","export default function WallCollision(\n  ballObj,\n  canvas,\n  player,\n  paddleProps,\n  setLives\n) {\n  if (ballObj.y + ballObj.rad > canvas.height) {\n    player.lives--;\n    ballObj.x = paddleProps.x;\n    ballObj.y = paddleProps.y - 30;\n    ballObj.dx = 6 * (Math.random() * 2 - 1);\n    ballObj.dy = -6;\n  }\n  if (ballObj.y - ballObj.rad < 0) {\n    ballObj.dy *= -1;\n  }\n\n  if (ballObj.x + ballObj.rad > canvas.width || ballObj.x - ballObj.rad < 0) {\n    ballObj.dx *= -1;\n  }\n}\n","export default (ctx, canvas, paddleProps) => {\n  class Paddle {\n    constructor(x) {\n      this.x = x;\n      this.y = canvas.height - 30;\n      this.height = 20;\n      this.width = paddleProps.width;\n      this.colors = [\"white\", \"yellow\"];\n    }\n    move() {\n      ctx.beginPath();\n      ctx.rect(this.x, this.y, this.width, this.height);\n      ctx.fillStyle = this.broke ? \"white\" : this.colors[1];\n      ctx.strokeStyle = this.broke ? \"white\" : \"red\";\n      ctx.lineWidth = 1;\n      ctx.fillStyle = this.broke ? \"white\" : this.colors[1];\n      ctx.shadowBlur = 0;\n      ctx.shadowColor = \"blue\";\n      ctx.strokeRect(this.x, this.y, this.width, this.height);\n      ctx.fill();\n    }\n  }\n\n  let paddle = new Paddle(paddleProps.x);\n  paddle.move();\n  if (paddleProps.x <= 0) {\n    paddleProps.x = 0;\n  } else if (paddleProps.x + paddleProps.width >= canvas.width) {\n    paddleProps.x = canvas.width - paddleProps.width;\n  }\n};\n","export default function PaddleHit(ballObj, paddleProps) {\n  if (\n    ballObj.x < paddleProps.x + paddleProps.width &&\n    ballObj.x > paddleProps.x &&\n    paddleProps.y < paddleProps.y + paddleProps.height &&\n    ballObj.y + ballObj.rad > paddleProps.y - paddleProps.height / 2\n  ) {\n    // CHECK WHERE THE ballObj HIT THE paddleProps\n    let collidePoint = ballObj.x - (paddleProps.x + paddleProps.width / 2);\n\n    // NORMALIZE THE VALUES\n    collidePoint = collidePoint / (paddleProps.width / 2);\n\n    // CALCULATE THE ANGLE OF THE ballObj\n    let angle = (collidePoint * Math.PI) / 3;\n\n    ballObj.dx = ballObj.speed * Math.sin(angle);\n    ballObj.dy = -ballObj.speed * Math.cos(angle);\n  }\n}\n","import React from \"react\";\nimport Board from \"./Board\";\n\nexport default function Brickpong() {\n  return (\n    <div>\n      <Board />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Brickpong from \"./games/brickpong\";\n\nfunction App() {\n  \n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Brickpong />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}